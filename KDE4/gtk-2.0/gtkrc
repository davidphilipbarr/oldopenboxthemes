
# Set GtkSettings color scheme property.
# This can be overriden (via an xsetting) with eg. the gnome-appearance-properties.
gtk_color_scheme = "fg_color:#444444\nbg_color:#E8E7E7\nbase_color:#fff\ntext_color:#111\nselected_bg_color:#ccc\nselected_fg_color:#111\ntooltip_bg_color:#F5F5B5\ntooltip_fg_color:#000"

style "murrine-default"
{
	########
	GtkButton      ::child-displacement-x = 0
	GtkButton      ::child-displacement-y = 0
	GtkButton      ::default-border       = { 0, 0, 0, 0 }
	GtkCheckButton ::indicator-size       = 14

	GtkPaned       ::handle-size          = 6

	GtkRange       ::trough-border        = 0
	GtkRange       ::slider-width         = 15
	GtkRange       ::stepper-size         = 15

	GtkScale       ::slider-length        = 23
	GtkScale       ::trough-side-details  = 0
	GtkScrollbar   ::min-slider-length    = 30

	GtkMenuBar     ::internal-padding     = 0
	GtkExpander    ::expander-size        = 16
	GtkToolbar     ::internal-padding     = 0
	GtkTreeView    ::expander-size        = 14
	GtkTreeView    ::vertical-separator   = 0
  GtkWidget::focus-line-width       = 0
  GtkWidget::focus-padding          = 1
	GtkMenu        ::horizontal-padding   = 0
	GtkMenu        ::vertical-padding     = 0

	# Glow the tasklist by changing the color, instead of overlaying it with a rectangle
	WnckTasklist   ::fade-overlay-rect    = 0
    GtkMenuBar ::shadow-type = GTK_SHADOW_NONE
  GtkToolbar ::shadow-type = GTK_SHADOW_NONE
 # GtkStatusbar::shadow_type = none 
GtkScrollbar   ::has-secondary-backward-stepper  =1    
	xthickness = 1
	ythickness = 1


	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @fg_color
	fg[INSENSITIVE]   = darker (@bg_color)

	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]	  = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[ACTIVE]      = shade (0.95, @selected_bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[ACTIVE]      = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)

engine "murrine" 
	{
		animation           = TRUE
		colorize_scrollbar  = FALSE
		contrast            = 0.85  # 0.8 for less contrast, more than 1.0 for more contrast on borders
		glazestyle          = 5   # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
		#gradient_shades     = {1.0,1.0,1.0,1.0}
		gradient_shades     = {1.11,1.02,.98,.97} # default: {1.1,1.0,1.0,1.1}
		gradients           = TRUE # FALSE = disabled, TRUE = enabled
		highlight_ratio     = 1.0 # set highlight amount for buttons or widgets
		lightborder_ratio   = 1.1   # sets lightborder amount for buttons or widgets
		lightborderstyle    = 1     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 0     # 0 = nothing, 1 = dotted
		menubaritemstyle    = 0     # 0 = menuitem look, 1 = button look
		menubarstyle        = 2    # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 0    # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		reliefstyle	    = 2     # 0 = flat, 1 = inset, 2 = shadow
		rgba		    = FALSE  # FALSE = disabled, TRUE = enabled
		roundness           = 1     # 0 = squared, 1 = old default, more will increase roundness
		scrollbarstyle      = 0    # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
		sliderstyle         = 0     # 0 = nothing added, 1 = handles
		stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle	    = 0     # 0 = flat, 1 = glassy, 2 = gradient
        #style = MIST
}
}

style "murrine-wide"
{
	xthickness = 2
	ythickness = 2

 bg[PRELIGHT]	  = @selected_bg_color
bg[SELECTED]	  = @selected_bg_color
 fg[PRELIGHT]	  =shade (.70,  @selected_bg_color)
fg[SELECTED]	  = @selected_bg_color
	bg[ACTIVE]        = shade (.90, @bg_color)
}

style "murrine-wider"
{
	xthickness = 3
	ythickness = 3

	bg[SELECTED]	= @selected_bg_color
}

style "murrine-button" = "murrine-wider"
{  xthickness = 3
  ythickness = 3
bg[NORMAL]	  = shade (1.2, @bg_color) 
bg[PRELIGHT]	  = @selected_bg_color
bg[SELECTED]	  = @selected_bg_color

	engine "murrine" {
		contrast            = 0.9
roundness           = 3	
	#gradient_shades     = {1.1,0.96,.93,.89} 
	}
}

style "murrine-entry" = "murrine-wider"
{
	engine "murrine" {
	#	contrast            = 0.45
	}
}
style "murrine-notebook"
{
	xthickness = 2
	ythickness = 2

   bg[NORMAL]	  = shade (1.03, @bg_color)

engine "murrine" {

roundness           = 3   
	}
}

style "murrine-tasklist" = "murrine-wide"
{
}

style "murrine-menu" = "murrine-wider"
{
	xthickness = 2
	ythickness = 2

bg[PRELIGHT]	  = @selected_bg_color
bg[SELECTED]	  = @selected_bg_color 
bg[NORMAL]	  = shade (1.05, @bg_color)
engine "murrine" {
#style = MIST
}
}

style "murrine-menu-item" = "murrine-wider"
{
	xthickness = 2
	ythickness = 3

	fg[PRELIGHT] = @selected_fg_color
	bg[SELECTED] = @selected_bg_color
	bg[SELECTED] = @selected_bg_color

	engine "murrine" 
	{
		roundness = 0
#style = MIST
gradient_shades     = {1.4,1.03,.98,.98} # default: {1.1,1.0,1.0,1.1} 
	}
}

style "murrine-separator-menu-item"
{
}

style "murrine-treeview"
{
	bg[SELECTED] = @selected_bg_color
}

style "murrine-treeview-header" = "murrine-default"
{
	bg[NORMAL]   = shade (1.06,@bg_color)
	bg[PRELIGHT] = shade (1.06,@bg_color)
}

style "murrine-frame-title"
{
	fg[NORMAL] = lighter (@fg_color)
}

style "murrine-tooltips" = "murrine-wider"
{
	bg[NORMAL] = @tooltip_bg_color
	fg[NORMAL] = @tooltip_fg_color
}

style "murrine-progressbar"
{
	xthickness = 0
	ythickness = 0

	fg[PRELIGHT] = @selected_fg_color
	bg[NORMAL]   = shade (0.98, @bg_color)
	bg[SELECTED] = @selected_bg_color
}

style "murrine-statusbar"
{
}

style "murrine-comboboxentry"
{
}

style "murrine-spinbutton"
{
}

style "murrine-scale" = "murrine-button"
{
	GtkRange       ::slider-width         = 15

	engine "murrine" 
	{
		roundness = 6
	}
}

style "murrine-hscale"
{
}

style "murrine-vscale"
{
}

style "murrine-scrollbar"
{
	bg[NORMAL]      = shade (.9, @bg_color)
	bg[PRELIGHT]    = shade (1.06, @bg_color)
	bg[ACTIVE]      = shade (.97, @bg_color)
	bg[INSENSITIVE] = shade (.98, @bg_color)
	bg[PRELIGHT] = @selected_bg_color
engine "murrine" {
		contrast            = 0.8	
roundness           = 3	
gradient_shades     = {1.11,1.03,.98,.98} # default: {1.1,1.0,1.0,1.1} 
		#lightborder_ratio   = 1.1   # sets lightborder amount for buttons or widgets	
}
}

style "murrine-hscrollbar"
{
}

style "murrine-vscrollbar"
{
}

style "murrine-menubar"
{

#bg[NORMAL]	  = @selected_bg_color
}

style "murrine-nautilus-location"
{
#	bg[NORMAL] = shade (1.0,@selected_bg_color)
#	bg[SELECTED] = shade (1.0,@selected_bg_color)
#	bg[ACTIVE] = shade (1.0,@selected_bg_color)
}

style "murrine-radiocheck" = "murrine-default"
{
	text[NORMAL]	= "#333333"
	text[PRELIGHT]	= "#333333"
}

style "panel"
{

	xthickness = 2
	ythickness = 2
	engine "murrine" {
		contrast = 0.75
	}
}

style "smaller-text"
{

}

style "handle"
{

	
}

#########################################
# Matches
#########################################

# theme radio buttons and checkmarks
class "GtkRadio*"                        	style "murrine-radiocheck"
class "GtkCheck*"                           	style "murrine-radiocheck"

# theme default style is applied to every widget
class "GtkWidget"    				style "murrine-default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"   				style "murrine-wide" 
class "GtkRange"     				style "murrine-wide"
class "GtkFrame"     				style "murrine-wide"
class "GtkSeparator" 				style "murrine-wide"
class "GtkEntry"     				style "murrine-entry"

class "GtkSpinButton"  				style "murrine-spinbutton"
class "GtkScale"       				style "murrine-scale"
class "GtkVScale"      				style "murrine-vscale"
class "GtkHScale"      				style "murrine-hscale"
class "GtkScrollbar"   				style "murrine-scrollbar"
class "GtkVScrollbar"  				style "murrine-vscrollbar"
class "GtkHScrollbar"  				style "murrine-hscrollbar"

# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

# This is not perfect, it could be done better
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>"     style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"  style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLabel>"  style "murrine-notebook"

widget_class "*<GtkButton>"      		style "murrine-button"
widget_class "*<GtkNotebook>"    		style "murrine-notebook"
widget_class "*<GtkStatusbar>*"  		style "murrine-statusbar"

widget_class "*<GtkComboBoxEntry>*"		style "murrine-comboboxentry"
widget_class "*<GtkCombo>*"         		style "murrine-comboboxentry"

widget_class "*<GtkMenuBar>*"           	style "murrine-menubar"
widget_class "*<GtkMenu>*"              	style "murrine-menu"
widget_class "*<GtkMenuItem>*"          	style "murrine-menu-item"
widget_class "*<GtkSeparatorMenuItem>*" 	style "murrine-separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" 		style "murrine-frame-title"
widget_class "*.<GtkTreeView>*"        		style "murrine-treeview"

widget_class "*<GtkProgressBar>"       		style "murrine-progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" 	style "murrine-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"    	style "murrine-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     	style "murrine-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    	style "murrine-treeview-header"

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    		style "murrine-treeview-header"
widget_class "*.ETree.ECanvas"    		style "murrine-treeview-header"

# Panel style
class "*Panel*" style "panel"
class "*notif*" style "panel"
class "*Notif*" style "panel"
class "*Tray*" style "panel"
class "*tray*" style "panel"

widget_class "*ToolButton*" style "smaller-text"
widget_class "*Statusbar*" style "smaller-text"
widget_class "*Mail*" style "panel"
widget "*PanelWidget*" style "panel"
widget "*PanelApplet*" style "panel"

class "PanelAppletFrame" style "handle"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" 				style "murrine-tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" 		style : highest "murrine-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "murrine-combobox-text-color-workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"	style "murrine-combobox-text-color-workaround"

style "murrine-menuitem-text-is-fg-color-workaround"
{
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = darker (@bg_color)
}

widget "*.gtk-combobox-popup-menu.*"   			style "murrine-menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "murrine-fg-is-text-color-workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = darker (@bg_color)
}

widget_class "*<GtkListItem>*" 				style "murrine-fg-is-text-color-workaround"
# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.

widget_class "*<GtkCList>" 				style "murrine-fg-is-text-color-workaround"


style "metacity-frame"
{

	# Normal base color
 	bg[NORMAL]      = "#e0e0e0"
	# Unfocused title background color
	bg[INSENSITIVE]	= "#464744"
	# Unfocused title text color
	fg[INSENSITIVE]	= "#ffffff"
	# Focused icon color
	fg[NORMAL]	= "#ffffff"
	# Focused title background color
	bg[SELECTED]	= "#464744"
	# Focused title text color
	fg[SELECTED]	= "#ffffff"
}
class "MetaFrames" style "metacity-frame"
